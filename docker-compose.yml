services:
  # Postgres
  postgres:
    image: postgres:15-alpine
    container_name: chronocode_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5460:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Migracion de base de datos
  migrator:
    image: migrate/migrate:v4.16.2
    container_name: chronocode_db_migrator
    volumes:
      - ./migrations:/migrations
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
    depends_on:
      postgres:
        condition: service_healthy
    command: [ "-database", "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable", "-path", "/migrations", "up" ]

  # Backend
  app:
    build: .
    container_name: go_analyzer_app
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
    depends_on:
      migrator:
        condition: service_completed_successfully

volumes:
  postgres_data:
    driver: local
